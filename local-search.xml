<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/02/21/Node%20%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88%20%E5%8F%8A%20%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <url>/2021/02/21/Node%20%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88%20%E5%8F%8A%20%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<ol><li>下载一个指定的包:   npm  i  包的具体名称</li><li>查看一个指定的包:   npm  view  包的具体名称</li><li>下载指定版本的包:   npm  i  包的具体名称@版本号</li><li> 快速创建包管理配置文件:    npm  init  -y                                                        [注意: 在项目的根目录下执行,项目目录不能使用中文命名,不能包含空格]</li><li>卸载指定的包:   npm  uninstall  包名称</li><li>安装开发测试阶段用到的包:   npm  i  -D  包名称@版本号</li><li>更换国内的源:   npm  config  set  registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></li><li>检查源是否更换成功:  npm  config  get  registry</li><li>使用 nrm 切换源:  npm  i  -g  nrm<code>==&gt;</code>nrm  ls<code> ==&gt;</code>nrm  use  taobao          [依次执行]</li><li>安装全局包:   npm  i  -g  包名称</li><li>下载全局包:   npm  uninstall  -g  包名称</li><li>发布包到 npm 官网:   npm  publish                                                               [在包的发布目录下面执行命令]</li><li>删除已经发布的包:   npm  unpublish  包名称  –force</li><li>查看本机的 npm :    npm  -v</li></ol><p>模板加载机制:</p><p>核心模块的加载机制:</p><p>require() 总是会优先加载核心模块</p><p>比如 require(‘http’) 始终返回内置的 HTTP 模块，即使有同名文件</p><p>自定义模块的加载机制:</p><p>使用 require() 方法去加载自定义模块，必须指定 ‘/‘、 ‘./‘ 或 ‘../‘ 开头的路径，如果没有这个路径标识,node 会默认成核心模块或 第三方模块</p><p>1.自定义文件模块: </p><p>如果按确切的文件名没有找到模块，则 Node.js 会尝试带上 .js、 .json 或      .node 拓展名再加载;</p><p>2.自定义目录模块:</p><p>当传递一个目录标识符给 require () 方法时, 加载的顺序如下:</p><p>   \1. 在加载的目录下查找 package.json 的文件, 并寻找 main 属性作为 require 的入口</p><p>   \2. 上述找不到, Node.js 将会试图加载目录下的 index.js 或 index.node 文件</p><p>第三方模块的加载机制:</p><p>如果传递给 require() 的模块标识符不是一个核心模块，也没有以 ‘/‘ 、 ‘../‘ 或 ‘./‘ 开头，</p><p>  那么 Node.js 会从当前模块的父目录开始，尝试从它的 /node_modules 目录里加载模块。如果还是没有找到，</p><p>  则移动到再上一层父目录，直到文件系统的根目录。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
